@model LecturerClaimSystem.Models.Claim

<!--Lecturer claim submission  form-->
<h2>Submit your Claim</h2>

<form asp-action="SubmitClaim" method="post" enctype="multipart/form-data">
    <div>
        <label for="LecturerName">Lecturer Name: </label>
        <input type="text" id="LecturerName" name="LecturerName" required class="form-control" />
    </div>
    <div>
        <label for="LecturerSurname">Lecturer Surname: </label>
        <input type="text" id="LecturerSurname" name="LecturerSurname" required class="form-control" />
    </div>
    <div>
        <label for="EmployeeNumber">Employee Number: </label>
        <input type="text" id="EmployeeNumber" name="EmployeeNumber" required class="form-control" />
    </div>
    <div>
        <label for="ContactDetails">Contact Details: </label>
        <input type="text" id="ContactDetails" name="ContactDetails" required class="form-control" />
    </div>

    <!-- File upload for supporting documents -->
    <div>
        <label for="SupportingDocument">Supporting Document: </label>
        <input type="file" id="SupportingDocument" name="SupportingDocument" accept=".pdf,.jpg,.png,.docx" required class="form-control" />
        <small class="text-muted">Allowed formats: PDF, JPG, PNG, DOCX</small>
    </div>

    <br /><br />

    <!-- Field for Additional Notes -->
    <div>
        <label for="AdditionalNotes">Additional Notes: </label>
        <textarea id="AdditionalNotes" name="AdditionalNotes" rows="4" class="form-control"></textarea>
    </div>

    <br /><br />

    h2>Modules</h2>
    <div id="module-container">
        <div class="module-group">
            <h4>Module 1</h4>
            <div>
                <label>Module Name: </label>
                <input name="Modules[0].ModuleName" class="form-control" required />
            </div>
            <div>
                <label>Programme: </label>
                <input name="Modules[0].Programme" class="form-control" required />
            </div>
            <div>
                <label>Hours worked: </label>
                <input name="Modules[0].NumberOfHours" class="form-control number-of-hours" required />
            </div>
            <div>
                <label>Hourly Rate: </label>
                <input name="Modules[0].HourlyRate" class="form-control hourly-rate" required />
            </div>
            <div>
                <label>Payment (auto-calculated)</label>
                <input name="Modules[0].Payment" class="form-control module-payment" readonly />
            </div>
        </div>
    </div>

    <button type="button" class="btn btn-secondary" id="add-module-btn">Add Another Module</button>

    <br /><br />

    <div>
        <label>Total Payment</label>
        <input id="total-payment" name="TotalPayment" class="form-control" readonly />
    </div>

    <button type="submit" class="btn btn-primary">Submit Claim</button>
</form>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Function to calculate and update payments
        const calculateTotalPayment = () => {
            let totalPayment = 0;

            // Iterate through each module group
            document.querySelectorAll(".module-group").forEach((group) => {
                const hoursInput = group.querySelector(".number-of-hours");
                const rateInput = group.querySelector(".hourly-rate");
                const paymentField = group.querySelector(".module-payment");

                // Get input values
                const hours = parseFloat(hoursInput.value) || 0;
                const rate = parseFloat(rateInput.value) || 0;

                // Calculate module payment
                const payment = hours * rate;

                // Update payment field
                paymentField.value = payment.toFixed(2);

                // Add to total payment
                totalPayment += payment;
            });

            // Update total payment field
            document.getElementById("total-payment").value = totalPayment.toFixed(2);
        };

        // Attach input event listeners for dynamic updates
        document.getElementById("module-container").addEventListener("input", calculateTotalPayment);

        // Function to add a new module dynamically
        document.getElementById("add-module-btn").addEventListener("click", function () {
            const moduleCount = document.querySelectorAll(".module-group").length;

            const newModule = `
                <div class="module-group">
                    <h4>Module ${moduleCount + 1}</h4>
                    <div>
                        <label>Module Name</label>
                        <input name="Modules[${moduleCount}].ModuleName" class="form-control" required />
                    </div>
                    <div>
                        <label>Programme</label>
                        <input name="Modules[${moduleCount}].Programme" class="form-control" required />
                    </div>
                    <div>
                        <label>Number of Hours</label>
                        <input name="Modules[${moduleCount}].NumberOfHours" class="form-control number-of-hours" required />
                    </div>
                    <div>
                        <label>Hourly Rate</label>
                        <input name="Modules[${moduleCount}].HourlyRate" class="form-control hourly-rate" required />
                    </div>
                    <div>
                        <label>Payment (auto-calculated)</label>
                        <input name="Modules[${moduleCount}].Payment" class="form-control module-payment" readonly />
                    </div>
                </div>
            `;

            // Add the new module to the container
            document.getElementById("module-container").insertAdjacentHTML("beforeend", newModule);
        });

        // Perform initial calculation
        calculateTotalPayment();
    });
</script>


